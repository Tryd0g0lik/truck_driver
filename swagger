{"swagger": "2.0", "info": {"title": "DJ Truck Driver API", "description": "DJ Drack API", "contact": {"email": "work80@mail.ru"}, "version": "v1"}, "host": "127.0.0.1:8000", "schemes": ["http"], "basePath": "/api/auth", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Bearer": {"type": "apiKey", "name": "Authorization", "in": "header"}}, "security": [{"Bearer": []}], "paths": {"/csrftoken/": {"get": {"operationId": "csrftoken_list", "description": "csrf-token", "parameters": [], "responses": {"200": {"description": "CSRF токен", "headers": {"Set-Cookie": {"description": "CSRF token cookie", "type": "string", "example": "csrftoken=GiehvEXjNiYqp3bOVtA...; Path=/; Secure; HttpOnly; SameSite=Lax"}}}}, "tags": ["csrf"]}, "parameters": []}, "/person/": {"post": {"operationId": "person_create", "description": "\nMethod: POST and the fixed pathname of '/api/auth/person/'            Example PATHNAME: \"{{url_base}}/api/auth/person/\"            @param: str category: Single line from total list, it user must choose/select.            Total list from category: BASE, DRIVER, MANAGER, ADMIN. It's roles for user. Everyone             role contain the list permissions.\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"title": "BodyData", "required": ["username", "password"], "type": "object", "properties": {"username": {"type": "string", "example": "<user_name>"}, "email": {"type": "string", "example": "<user_email>"}, "password": {"type": "string", "example": "nH2qGiehvEXjNiYqp3bOVtAYv...."}, "category": {"type": "string", "example": "BASE"}}, "in": "body"}}], "responses": {"201": {"description": "Ok"}, "401": {"description": "Not Ok"}, "500": {"description": "Something what wrong. Read the response variable 'data'"}}, "tags": ["person"]}, "parameters": []}, "/person/0/active/": {"post": {"operationId": "person_0_active", "description": "\nMethod: POST and the fixed pathname of url\nExample PATHNAME: \"/api/auth/person/0/active/\"\n\n", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"title": "BodyData", "required": ["username", "password"], "type": "object", "properties": {"username": {"type": "string", "example": "Serge"}, "password": {"type": "string", "example": "nH2qGiehvEXjNiYqp3bOVtAYv...."}}, "in": "body"}}, {"name": "X-CSRFToken", "in": "header", "type": "string", "example": "nH2qGiehvEXjNiYqp3bOVtAYv....", "title": "X-CSRFToken"}], "responses": {"200": {"description": "User data: access & refresh the tokens.", "schema": {"type": "object", "properties": {"data": {"type": "array", "items": {"type": "object", "allOf": [{"type": "object", "properties": {"user": {"type": "object", "properties": {"id": {"type": "integer", "format": "int64", "example": 123}, "username": {"type": "string", "example": "Serge"}, "last_login": {"type": "string", "format": "date-time", "example": "2025-07-20 00:39:14.739 +0700"}, "first_name": {"type": "string", "example": ""}, "email": {"type": "string", "format": "email"}, "is_staff": {"type": "boolean"}, "is_active": {"type": "boolean"}, "date_joined": {"type": "string", "format": "date-time", "example": "2025-07-20 00:39:14.739 +0700"}, "created_at": {"type": "string", "format": "date-time", "example": "2025-07-20 00:39:14.739 +0700"}, "updated_at": {"type": "string", "format": "date-time", "example": "2025-07-20 00:39:14.739 +0700"}, "category": {"type": "string", "example": "DRIVER"}, "password": {"type": "string"}, "is_sent": {"type": "boolean"}, "is_verified": {"type": "boolean"}, "verification_code": {"type": "string"}, "balamce": {"type": "number", "format": "int64"}}}}}, {"type": "object", "properties": {"access": {"type": "object", "properties": {"token_access": {"type": "string", "example": "nH2qGiehvEXjNiYqp3bOVtAYv...."}, "live_time": {"type": "string", "format": "date-time", "example": "465998"}}}}}, {"type": "object", "properties": {"reffresh": {"type": "object", "properties": {"token_refresh": {"type": "string", "example": "nH2qGiehvEXjNiYqp3bOVtAYv...."}, "live_time": {"type": "string", "format": "date-time", "example": "12349679.02"}}}}}]}}}}}, "401": {"description": "Some wink what wrong/ Check you data"}, "400": {"description": "Bad request"}, "500": {"description": "Internal server error"}}, "tags": ["person"]}, "parameters": []}}, "definitions": {}}